import requests
from bs4 import BeautifulSoup
import re

def create_soup(url):
    headers = {"User-Agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.131 Safari/537.36"}
    res = requests.get(url,headers=headers)
    res.raise_for_status()
    soup = BeautifulSoup(res.text,"lxml")
    return soup

def scrape_weather():
    print("[오늘의 날씨]")
    url = "https://search.naver.com/search.naver?sm=tab_hty.top&where=nexearch&query=%EC%84%9C%EC%9A%B8+%EB%82%A0%EC%94%A8&oquery=%EC%98%A4%EB%8A%98%EC%9D%98+%EB%82%A0%EC%94%A8&tqi=hd%2F3tsp0YidssTmtV4ZssssssaV-433217"
    soup = create_soup(url)
    #어제날씨 비교
    cast = soup.find("p",attrs={"class":"cast_txt"}).get_text()
    #현재 온도(최저,최고)
    current_temp = soup.find("p",attrs={"class":"info_temperature"}).get_text().replace("도씨","")
    min_temp = soup.find("span",attrs={"class":"min"}).get_text()#최저온도
    max_temp = soup.find("span",attrs={"class":"max"}).get_text()#최저온도

    #만일 클래스랑 아이디를 함께 검색을 원할때(그냥 같이 쓰면 된다)
    # max_temp = soup.find("span",attrs={"class":"max","id":"dust"}).get_text()#최저온도

    #클래스 2개 비교를 원하는경우 리스트로 감싸서 하나를 더
    # max_temp = soup.find("span",attrs={"class":["max","dust"]}).get_text()#최저온도

    #클래스랑 텍스를 함께 비교
    # max_temp = soup.find("span",attrs={"class":"max"},text ="초미세먼지").get_text()#최저온도
    # max_temp = soup.find("span",attrs={"class":"max"},text =["미세먼지","초미세먼지"]).get_text()#최저온도

    #오전,오후 강수확률
    morning_rate = soup.find("span",attrs={"class":"point_time morning"}).get_text().strip()#strip은 공백제거
    afternoon_rate = soup.find("span",attrs={"class":"point_time afternoon"}).get_text().strip()#strip은 공백제거

    #미세먼지 정보
    dust = soup.find("dl",attrs={"class":"indicator"})
    dust1 = soup.find_all("dd")[0].get_text()#dl태그 자식인 dd태그중 첫번째
    dust2 = soup.find_all("dd")[1].get_text()#dl태그 자식인 dd태그중 두번째
    dust3 = soup.find_all("dd")[2].get_text()#dl태그 자식인 dd태그중 세번째

    #출력
    print(cast)
    print("현재 {} (최저 {} / 최고 {})".format(current_temp,min_temp,max_temp))
    print("오전 {} / 오후 {}".format(morning_rate,afternoon_rate))
    print()
    print(f"미세먼지 {dust1}")
    print(f"초미세먼지 {dust2}")
    print(f"오존지수 {dust3}")
    print()

#네이버 헤드라인 뉴스
def scrape_headline_news():
    print("[네이버 헤드라인 뉴스]")
    url = "https://news.naver.com"
    soup = create_soup(url)
    news_list = soup.find("ul",attrs={"class":"hdline_article_list"}).find_all("li",limit=3)
    #limit은 li태그를 모두 찾는데 3개까지만 
    for index, news in enumerate(news_list):
        title = news.find("a").get_text().strip()
        link = url + news.find("a")["href"]
        print("{}. {}".format(index+1,title))
        print(f"(링크 : {link})")
        print()

#네이버 IT뉴스 가져오기
def scrape_it_news():
    print("[네이버 IT 뉴스]")
    url = "https://news.naver.com/main/list.naver?mode=LS2D&mid=shm&sid1=105&sid2=230"
    soup = create_soup(url)
    news_list = soup.find("ul",attrs={"class":"type06_headline"}).find_all("li",limit=3)
    #limit은 li태그를 모두 찾는데 3개까지만 
    for index, news in enumerate(news_list):
        a_idx = 0
        img = news.find("img")
        if img:
            a_idx = 1 #img태그가 있으면 두번째 a태그의 정보를 사용

        title = news.find_all("a")[a_idx].get_text().strip()
        link = url + news.find_all("a")[a_idx]["href"]
        print("{}. {}".format(index+1,title))
        print(f"(링크 : {link})")
        print()

#영어회화 가져오기
def scrape_english():
    print("[오늘의 영어 회화]")
    url = "https://www.hackers.co.kr/?c=s_eng/eng_contents/I_others_english&keywd=haceng_submain_lnb_eng_I_others_english&logger_kw=haceng_submain_lnb_eng_I_others_english"
    soup = create_soup(url)
    sentences = soup.find_all("div",attrs={"id":re.compile("^conv_kor_t")})
    #re.compile("^을 쓴 이유는 영어 지문과 한글 지문 id가 동일하기 때문에 conv_kor_t로 시작하는 모든 id를 가져온다 

    print("(영어 지문)")
    for sentence in sentences[len(sentences)//2:]:
    #len(sentences)//2:는 영어지문이 한글지문보다 뒤에있기때문에
    #sentences을 절반으로 나눠서 8이라고치면 4~8까지 출력
    #//를 쓴이유는 문장이7개일경우 나누면 실수가 나오기때문에 정수로 변환하기 위해서
        print(sentence.get_text().strip())

    print()
    print("(한글 지문)")
    for sentence in sentences[:len(sentences)//2]:
    #영어지문과 반대로 활용 0~절반까지
        print(sentence.get_text().strip())

if __name__ == "__main__":
    scrape_weather() #오늘의 날씨 정보 가져오기
    scrape_headline_news() #헤드라인 뉴스 가져오기
    scrape_it_news() #IT 뉴스 가져오기
    scrape_english() #영어회화 가져오기
