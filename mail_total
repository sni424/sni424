#[선정 안내 메일]
#제목 : 파이썬 특강 안내 [선정]
#본문 : xx님 축하드립니다. 특강 대상자로 선정되셨습니다. (선정순번1)

#[탈락 안내 메일]
#제목 : 파이썬 특강안내 [탈락]
#본문 : xx님 아쉽게도 탈락입니다. 취소 인원이 발생하는 경우 연락드리겠습니다.(대기순번 1)

import smtplib #메일보내기
from account import *
from imap_tools import MailBox
from email.message import EmailMessage, Message

max_val = 3 #최대 선정자 수
#리스트로 관리
applicant_list = []

print("[1. 지원자 메일 조회]")
with MailBox("imap.gmail.com",993).login(EMAIL_ADRESS,EMAIL_PASSWORD,initial_folder="INBOX") as mailbox:
    index = 1
    for msg in mailbox.fetch('(SENTSINCE 20-Aug-2021)'): #2021년 8월20일 이후 메일
        if "파이썬 특강 신청합니다." in msg.subject:
            nickname, phone = msg.text.strip().split("/")#.strip()줄바꿈 삭제
            # print("순번 : {} 닉네임 : {} 전화번호 : {}".format(index,nickname,phone))
            applicant_list.append((msg,index,nickname,phone))#튜플형식으로 추가
            index += 1

print("[2. 선정,탈락 메일 발송]")


with smtplib.SMTP("smtp.gmail.com",587) as smtp:
    smtp.ehlo() #연결확인
    smtp.starttls() #모든 내용 암호화
    smtp.login(EMAIL_ADRESS,EMAIL_PASSWORD) #로그인
    
    for applicant in applicant_list:
        to_addr = applicant[0].from_ #수신 메일 주소 applicant[0]은 msg의 객체
        # index = applicant[1]
        # nickname = applicant[2]
        # phone = applicant[3]
        index,nickname,phone = applicant[1:]

        title = None
        content = None

        if index <= max_val:
            title = "파이썬 특강 안내 [선정]"
            content = "{}님 축하드립니다. 특강 대상자로 선정되셨습니다. (선정순번{})".format(nickname,index)
        else:
            title = "파이썬 특강안내 [탈락]"
            content = "{}님 아쉽게도 탈락입니다. 취소 인원이 발생하는 경우 연락드리겠습니다.(대기순번 {})".format(nickname, index - max_val)            

        msg = EmailMessage()
        msg["Subject"] = title #제목
        msg["From"] = EMAIL_ADRESS #보내는 사람
        msg["To"] = to_addr #받는 사람
        msg.set_content(content)
        smtp.send_message(msg)
        print(nickname,"님에게 메일 발송 완료")

#[선정 명단 엑셀]
#순번 닉네임 전화번호
# 1   유재석  0000
# 2   박명수  0001
# 3   정준하  0002

print("[3. 선정자 명단 파일 생성]")
from openpyxl import Workbook
wb = Workbook()
ws = wb.active
ws.append(["순번","닉네임","전화번호"])

for applicant in applicant_list[:max_val]: #선정자 3명 가져오기 0,1,2
    ws.append([index, nickname, phone])

ws.save("result.xlsx")
print("모든 작업 완료")
